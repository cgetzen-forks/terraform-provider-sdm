// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: builds_private.proto

// This file is called builds_private because it otherwise conflicts
// with our internal builds grpc service

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BuildCreateRequest specifies parameters for a new access rule.
type BuildCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Parameters to define the new Build.
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *BuildCreateRequest) Reset() {
	*x = BuildCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCreateRequest) ProtoMessage() {}

func (x *BuildCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCreateRequest.ProtoReflect.Descriptor instead.
func (*BuildCreateRequest) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{0}
}

func (x *BuildCreateRequest) GetMeta() *CreateRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildCreateRequest) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

// BuildCreateResponse reports how the Build was created in the system.
type BuildCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The created Build.
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *BuildCreateResponse) Reset() {
	*x = BuildCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCreateResponse) ProtoMessage() {}

func (x *BuildCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCreateResponse.ProtoReflect.Descriptor instead.
func (*BuildCreateResponse) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{1}
}

func (x *BuildCreateResponse) GetMeta() *CreateResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildCreateResponse) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *BuildCreateResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// BuildGetRequest specifies which Build to retrieve.
type BuildGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the Build to retrieve.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BuildGetRequest) Reset() {
	*x = BuildGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildGetRequest) ProtoMessage() {}

func (x *BuildGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildGetRequest.ProtoReflect.Descriptor instead.
func (*BuildGetRequest) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{2}
}

func (x *BuildGetRequest) GetMeta() *GetRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// BuildGetResponse returns a requested Build.
type BuildGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The requested Build.
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *BuildGetResponse) Reset() {
	*x = BuildGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildGetResponse) ProtoMessage() {}

func (x *BuildGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildGetResponse.ProtoReflect.Descriptor instead.
func (*BuildGetResponse) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{3}
}

func (x *BuildGetResponse) GetMeta() *GetResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildGetResponse) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *BuildGetResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// BuildUpdateRequest identifies an Access Rule by ID and provides fields
// to update on that Access Rule record.
type BuildUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *UpdateRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the access rule to update. If an ID is already
	// specified in the `access_rule` field, this field is not required. If an ID is
	// specified in both places, they must match.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Parameters to overwrite the specified access rule.
	Build *Build `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *BuildUpdateRequest) Reset() {
	*x = BuildUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildUpdateRequest) ProtoMessage() {}

func (x *BuildUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildUpdateRequest.ProtoReflect.Descriptor instead.
func (*BuildUpdateRequest) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{4}
}

func (x *BuildUpdateRequest) GetMeta() *UpdateRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuildUpdateRequest) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

// BuildUpdateResponse returns the fields of an Access Rule after it has
// been updated by a BuildUpdateRequest.
type BuildUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *UpdateResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The updated Build.
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *BuildUpdateResponse) Reset() {
	*x = BuildUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildUpdateResponse) ProtoMessage() {}

func (x *BuildUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildUpdateResponse.ProtoReflect.Descriptor instead.
func (*BuildUpdateResponse) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{5}
}

func (x *BuildUpdateResponse) GetMeta() *UpdateResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildUpdateResponse) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *BuildUpdateResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// BuildListRequest specifies criteria for retrieving a list of Builds.
type BuildListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging parameters for the query.
	Meta *ListRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A human-readable filter query string.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *BuildListRequest) Reset() {
	*x = BuildListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildListRequest) ProtoMessage() {}

func (x *BuildListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildListRequest.ProtoReflect.Descriptor instead.
func (*BuildListRequest) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{6}
}

func (x *BuildListRequest) GetMeta() *ListRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildListRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// BuildListResponse returns a list of Builds that meet the criteria of a
// BuildListRequest.
type BuildListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging information for the query.
	Meta *ListResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A single page of results matching the list request criteria.
	Builds []*Build `protobuf:"bytes,2,rep,name=builds,proto3" json:"builds,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *BuildListResponse) Reset() {
	*x = BuildListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildListResponse) ProtoMessage() {}

func (x *BuildListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildListResponse.ProtoReflect.Descriptor instead.
func (*BuildListResponse) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{7}
}

func (x *BuildListResponse) GetMeta() *ListResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BuildListResponse) GetBuilds() []*Build {
	if x != nil {
		return x.Builds
	}
	return nil
}

func (x *BuildListResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// An Build defines a match pattern for resources based either ID, either
// dbtype_alias or tags.
type Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version          string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Software         string                 `protobuf:"bytes,3,opt,name=software,proto3" json:"software,omitempty"`
	CommitHash       string                 `protobuf:"bytes,4,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	BadReason        string                 `protobuf:"bytes,17,opt,name=bad_reason,json=badReason,proto3" json:"bad_reason,omitempty"`
	BaseCommitHash   string                 `protobuf:"bytes,18,opt,name=base_commit_hash,json=baseCommitHash,proto3" json:"base_commit_hash,omitempty"`
	Branch           string                 `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	BuildkiteUrl     string                 `protobuf:"bytes,6,opt,name=buildkite_url,json=buildkiteUrl,proto3" json:"buildkite_url,omitempty"`
	RootBuildkiteUrl string                 `protobuf:"bytes,7,opt,name=root_buildkite_url,json=rootBuildkiteUrl,proto3" json:"root_buildkite_url,omitempty"`
	BuildNotes       string                 `protobuf:"bytes,8,opt,name=build_notes,json=buildNotes,proto3" json:"build_notes,omitempty"`
	DeploymentNotes  string                 `protobuf:"bytes,9,opt,name=deployment_notes,json=deploymentNotes,proto3" json:"deployment_notes,omitempty"`
	DevNotes         string                 `protobuf:"bytes,16,opt,name=dev_notes,json=devNotes,proto3" json:"dev_notes,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Commits          []string               `protobuf:"bytes,11,rep,name=commits,proto3" json:"commits,omitempty"`
	Issues           []string               `protobuf:"bytes,12,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *Build) Reset() {
	*x = Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_builds_private_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Build) ProtoMessage() {}

func (x *Build) ProtoReflect() protoreflect.Message {
	mi := &file_builds_private_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Build.ProtoReflect.Descriptor instead.
func (*Build) Descriptor() ([]byte, []int) {
	return file_builds_private_proto_rawDescGZIP(), []int{8}
}

func (x *Build) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Build) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Build) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *Build) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *Build) GetBadReason() string {
	if x != nil {
		return x.BadReason
	}
	return ""
}

func (x *Build) GetBaseCommitHash() string {
	if x != nil {
		return x.BaseCommitHash
	}
	return ""
}

func (x *Build) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Build) GetBuildkiteUrl() string {
	if x != nil {
		return x.BuildkiteUrl
	}
	return ""
}

func (x *Build) GetRootBuildkiteUrl() string {
	if x != nil {
		return x.RootBuildkiteUrl
	}
	return ""
}

func (x *Build) GetBuildNotes() string {
	if x != nil {
		return x.BuildNotes
	}
	return ""
}

func (x *Build) GetDeploymentNotes() string {
	if x != nil {
		return x.DeploymentNotes
	}
	return ""
}

func (x *Build) GetDevNotes() string {
	if x != nil {
		return x.DevNotes
	}
	return ""
}

func (x *Build) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Build) GetCommits() []string {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *Build) GetIssues() []string {
	if x != nil {
		return x.Issues
	}
	return nil
}

var File_builds_private_proto protoreflect.FileDescriptor

var file_builds_private_proto_rawDesc = []byte{
	0x0a, 0x14, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3,
	0x07, 0x01, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x3a, 0x14, 0xfa, 0xf8, 0xb3, 0x07, 0x0f,
	0xd2, 0xf3, 0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22,
	0x82, 0x02, 0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2,
	0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x62, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2c, 0xf2, 0xf8, 0xb3,
	0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x06, 0xb2, 0xf4, 0xb3, 0x07,
	0x01, 0x2a, 0xf2, 0xf8, 0xb3, 0x07, 0x12, 0xb2, 0xf4, 0xb3, 0x07, 0x0d, 0x21, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x3a, 0x1e, 0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3, 0xb3, 0x07, 0x0a,
	0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8,
	0xf3, 0xb3, 0x07, 0x01, 0x22, 0x6f, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02, 0x69, 0x64, 0x3a,
	0x14, 0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3, 0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2,
	0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x62, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2c, 0xf2, 0xf8, 0xb3,
	0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x06, 0xb2, 0xf4, 0xb3, 0x07,
	0x01, 0x2a, 0xf2, 0xf8, 0xb3, 0x07, 0x12, 0xb2, 0xf4, 0xb3, 0x07, 0x0d, 0x21, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x3a, 0x1e, 0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3, 0xb3, 0x07, 0x01,
	0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3, 0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01,
	0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x3a, 0x14, 0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3,
	0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x82, 0x02,
	0x0a, 0x13, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2, 0xf8, 0xb3,
	0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x62,
	0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2c, 0xf2, 0xf8, 0xb3, 0x07, 0x05,
	0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x06, 0xb2, 0xf4, 0xb3, 0x07, 0x01, 0x2a,
	0xf2, 0xf8, 0xb3, 0x07, 0x12, 0xb2, 0xf4, 0xb3, 0x07, 0x0d, 0x21, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x3a, 0x1e, 0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xfa, 0xf8,
	0xb3, 0x07, 0x0f, 0xd2, 0xf3, 0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x22, 0x79, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x14, 0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3,
	0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0xea, 0x01,
	0x0a, 0x11, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x2d, 0x0a, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x0a, 0xf2, 0xf8,
	0xb3, 0x07, 0x05, 0xb8, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x12, 0x62, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2c, 0xf2, 0xf8, 0xb3,
	0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x06, 0xb2, 0xf4, 0xb3, 0x07,
	0x01, 0x2a, 0xf2, 0xf8, 0xb3, 0x07, 0x12, 0xb2, 0xf4, 0xb3, 0x07, 0x0d, 0x21, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x3a, 0x14, 0xfa, 0xf8, 0xb3, 0x07, 0x0f, 0xd2, 0xf3, 0xb3, 0x07, 0x0a,
	0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0xd9, 0x05, 0x0a, 0x05, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0,
	0xf3, 0xb3, 0x07, 0x01, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x2b,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x0a, 0x62,
	0x61, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x62, 0x61, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0e, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8,
	0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x2f, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6b, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3,
	0xb3, 0x07, 0x01, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6b, 0x69, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x38, 0x0a, 0x12, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x6b,
	0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2,
	0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x10, 0x72, 0x6f, 0x6f, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x6b, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x0b, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0a, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0,
	0xf3, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07,
	0x01, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x3a, 0x19, 0xfa, 0xf8, 0xb3, 0x07, 0x14,
	0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xd2, 0xf3, 0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x0e, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f,
	0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x32, 0xb4, 0x03, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xf9, 0xb3, 0x07, 0x09, 0xa2, 0xf3, 0xb3, 0x07, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x0f, 0xaa, 0xf3, 0xb3, 0x07, 0x0a, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xf9, 0xb3, 0x07, 0x08,
	0xa2, 0xf3, 0xb3, 0x07, 0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x14, 0xaa, 0xf3, 0xb3,
	0x07, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x61, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xf9,
	0xb3, 0x07, 0x08, 0xa2, 0xf3, 0xb3, 0x07, 0x03, 0x70, 0x75, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x14,
	0xaa, 0xf3, 0xb3, 0x07, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x56, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xf9, 0xb3, 0x07, 0x08,
	0xa2, 0xf3, 0xb3, 0x07, 0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x0f, 0xaa, 0xf3, 0xb3,
	0x07, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x1a, 0x2f, 0xca, 0xf9,
	0xb3, 0x07, 0x0a, 0xc2, 0xf9, 0xb3, 0x07, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0xca, 0xf9, 0xb3,
	0x07, 0x07, 0xd2, 0xf9, 0xb3, 0x07, 0x02, 0x62, 0x2d, 0xca, 0xf9, 0xb3, 0x07, 0x0f, 0xca, 0xf9,
	0xb3, 0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x7d, 0x0a,
	0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x42, 0x15, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e,
	0x67, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2d,
	0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xc2, 0x92, 0xb4, 0x07, 0x0f, 0xa2, 0x8c, 0xb4,
	0x07, 0x0a, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_builds_private_proto_rawDescOnce sync.Once
	file_builds_private_proto_rawDescData = file_builds_private_proto_rawDesc
)

func file_builds_private_proto_rawDescGZIP() []byte {
	file_builds_private_proto_rawDescOnce.Do(func() {
		file_builds_private_proto_rawDescData = protoimpl.X.CompressGZIP(file_builds_private_proto_rawDescData)
	})
	return file_builds_private_proto_rawDescData
}

var file_builds_private_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_builds_private_proto_goTypes = []interface{}{
	(*BuildCreateRequest)(nil),     // 0: v1.BuildCreateRequest
	(*BuildCreateResponse)(nil),    // 1: v1.BuildCreateResponse
	(*BuildGetRequest)(nil),        // 2: v1.BuildGetRequest
	(*BuildGetResponse)(nil),       // 3: v1.BuildGetResponse
	(*BuildUpdateRequest)(nil),     // 4: v1.BuildUpdateRequest
	(*BuildUpdateResponse)(nil),    // 5: v1.BuildUpdateResponse
	(*BuildListRequest)(nil),       // 6: v1.BuildListRequest
	(*BuildListResponse)(nil),      // 7: v1.BuildListResponse
	(*Build)(nil),                  // 8: v1.Build
	(*CreateRequestMetadata)(nil),  // 9: v1.CreateRequestMetadata
	(*CreateResponseMetadata)(nil), // 10: v1.CreateResponseMetadata
	(*RateLimitMetadata)(nil),      // 11: v1.RateLimitMetadata
	(*GetRequestMetadata)(nil),     // 12: v1.GetRequestMetadata
	(*GetResponseMetadata)(nil),    // 13: v1.GetResponseMetadata
	(*UpdateRequestMetadata)(nil),  // 14: v1.UpdateRequestMetadata
	(*UpdateResponseMetadata)(nil), // 15: v1.UpdateResponseMetadata
	(*ListRequestMetadata)(nil),    // 16: v1.ListRequestMetadata
	(*ListResponseMetadata)(nil),   // 17: v1.ListResponseMetadata
	(*timestamppb.Timestamp)(nil),  // 18: google.protobuf.Timestamp
}
var file_builds_private_proto_depIdxs = []int32{
	9,  // 0: v1.BuildCreateRequest.meta:type_name -> v1.CreateRequestMetadata
	8,  // 1: v1.BuildCreateRequest.build:type_name -> v1.Build
	10, // 2: v1.BuildCreateResponse.meta:type_name -> v1.CreateResponseMetadata
	8,  // 3: v1.BuildCreateResponse.build:type_name -> v1.Build
	11, // 4: v1.BuildCreateResponse.rate_limit:type_name -> v1.RateLimitMetadata
	12, // 5: v1.BuildGetRequest.meta:type_name -> v1.GetRequestMetadata
	13, // 6: v1.BuildGetResponse.meta:type_name -> v1.GetResponseMetadata
	8,  // 7: v1.BuildGetResponse.build:type_name -> v1.Build
	11, // 8: v1.BuildGetResponse.rate_limit:type_name -> v1.RateLimitMetadata
	14, // 9: v1.BuildUpdateRequest.meta:type_name -> v1.UpdateRequestMetadata
	8,  // 10: v1.BuildUpdateRequest.build:type_name -> v1.Build
	15, // 11: v1.BuildUpdateResponse.meta:type_name -> v1.UpdateResponseMetadata
	8,  // 12: v1.BuildUpdateResponse.build:type_name -> v1.Build
	11, // 13: v1.BuildUpdateResponse.rate_limit:type_name -> v1.RateLimitMetadata
	16, // 14: v1.BuildListRequest.meta:type_name -> v1.ListRequestMetadata
	17, // 15: v1.BuildListResponse.meta:type_name -> v1.ListResponseMetadata
	8,  // 16: v1.BuildListResponse.builds:type_name -> v1.Build
	11, // 17: v1.BuildListResponse.rate_limit:type_name -> v1.RateLimitMetadata
	18, // 18: v1.Build.created_at:type_name -> google.protobuf.Timestamp
	0,  // 19: v1.BuildsPrivate.Create:input_type -> v1.BuildCreateRequest
	2,  // 20: v1.BuildsPrivate.Get:input_type -> v1.BuildGetRequest
	4,  // 21: v1.BuildsPrivate.Update:input_type -> v1.BuildUpdateRequest
	6,  // 22: v1.BuildsPrivate.List:input_type -> v1.BuildListRequest
	1,  // 23: v1.BuildsPrivate.Create:output_type -> v1.BuildCreateResponse
	3,  // 24: v1.BuildsPrivate.Get:output_type -> v1.BuildGetResponse
	5,  // 25: v1.BuildsPrivate.Update:output_type -> v1.BuildUpdateResponse
	7,  // 26: v1.BuildsPrivate.List:output_type -> v1.BuildListResponse
	23, // [23:27] is the sub-list for method output_type
	19, // [19:23] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_builds_private_proto_init() }
func file_builds_private_proto_init() {
	if File_builds_private_proto != nil {
		return
	}
	file_options_proto_init()
	file_spec_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_builds_private_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_builds_private_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_builds_private_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_builds_private_proto_goTypes,
		DependencyIndexes: file_builds_private_proto_depIdxs,
		MessageInfos:      file_builds_private_proto_msgTypes,
	}.Build()
	File_builds_private_proto = out.File
	file_builds_private_proto_rawDesc = nil
	file_builds_private_proto_goTypes = nil
	file_builds_private_proto_depIdxs = nil
}
