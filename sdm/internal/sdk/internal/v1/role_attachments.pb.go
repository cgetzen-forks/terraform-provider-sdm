// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.19.3
// source: role_attachments.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// RoleAttachmentCreateRequest specifies what kind of RoleAttachments should be registered in
// the organizations fleet.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Parameters to define the new RoleAttachment.
	RoleAttachment *RoleAttachment `protobuf:"bytes,2,opt,name=role_attachment,json=roleAttachment,proto3" json:"role_attachment,omitempty"`
}

func (x *RoleAttachmentCreateRequest) Reset() {
	*x = RoleAttachmentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentCreateRequest) ProtoMessage() {}

func (x *RoleAttachmentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentCreateRequest.ProtoReflect.Descriptor instead.
func (*RoleAttachmentCreateRequest) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{0}
}

func (x *RoleAttachmentCreateRequest) GetMeta() *CreateRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentCreateRequest) GetRoleAttachment() *RoleAttachment {
	if x != nil {
		return x.RoleAttachment
	}
	return nil
}

// RoleAttachmentCreateResponse reports how the RoleAttachments were created in the system.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *CreateResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The created RoleAttachment.
	RoleAttachment *RoleAttachment `protobuf:"bytes,2,opt,name=role_attachment,json=roleAttachment,proto3" json:"role_attachment,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *RoleAttachmentCreateResponse) Reset() {
	*x = RoleAttachmentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentCreateResponse) ProtoMessage() {}

func (x *RoleAttachmentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentCreateResponse.ProtoReflect.Descriptor instead.
func (*RoleAttachmentCreateResponse) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{1}
}

func (x *RoleAttachmentCreateResponse) GetMeta() *CreateResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentCreateResponse) GetRoleAttachment() *RoleAttachment {
	if x != nil {
		return x.RoleAttachment
	}
	return nil
}

func (x *RoleAttachmentCreateResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// RoleAttachmentGetRequest specifies which RoleAttachment to retrieve.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the RoleAttachment to retrieve.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RoleAttachmentGetRequest) Reset() {
	*x = RoleAttachmentGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentGetRequest) ProtoMessage() {}

func (x *RoleAttachmentGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentGetRequest.ProtoReflect.Descriptor instead.
func (*RoleAttachmentGetRequest) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{2}
}

func (x *RoleAttachmentGetRequest) GetMeta() *GetRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RoleAttachmentGetResponse returns a requested RoleAttachment.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *GetResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The requested RoleAttachment.
	RoleAttachment *RoleAttachment `protobuf:"bytes,2,opt,name=role_attachment,json=roleAttachment,proto3" json:"role_attachment,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *RoleAttachmentGetResponse) Reset() {
	*x = RoleAttachmentGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentGetResponse) ProtoMessage() {}

func (x *RoleAttachmentGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentGetResponse.ProtoReflect.Descriptor instead.
func (*RoleAttachmentGetResponse) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{3}
}

func (x *RoleAttachmentGetResponse) GetMeta() *GetResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentGetResponse) GetRoleAttachment() *RoleAttachment {
	if x != nil {
		return x.RoleAttachment
	}
	return nil
}

func (x *RoleAttachmentGetResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// RoleAttachmentDeleteRequest identifies a RoleAttachment by ID to delete.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *DeleteRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// The unique identifier of the RoleAttachment to delete.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RoleAttachmentDeleteRequest) Reset() {
	*x = RoleAttachmentDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentDeleteRequest) ProtoMessage() {}

func (x *RoleAttachmentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentDeleteRequest.ProtoReflect.Descriptor instead.
func (*RoleAttachmentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{4}
}

func (x *RoleAttachmentDeleteRequest) GetMeta() *DeleteRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RoleAttachmentDeleteResponse returns information about a RoleAttachment that was deleted.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reserved for future use.
	Meta *DeleteResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,2,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *RoleAttachmentDeleteResponse) Reset() {
	*x = RoleAttachmentDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentDeleteResponse) ProtoMessage() {}

func (x *RoleAttachmentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentDeleteResponse.ProtoReflect.Descriptor instead.
func (*RoleAttachmentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{5}
}

func (x *RoleAttachmentDeleteResponse) GetMeta() *DeleteResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentDeleteResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// RoleAttachmentListRequest specifies criteria for retrieving a list of RoleAttachments.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging parameters for the query.
	Meta *ListRequestMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A human-readable filter query string.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *RoleAttachmentListRequest) Reset() {
	*x = RoleAttachmentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentListRequest) ProtoMessage() {}

func (x *RoleAttachmentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentListRequest.ProtoReflect.Descriptor instead.
func (*RoleAttachmentListRequest) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{6}
}

func (x *RoleAttachmentListRequest) GetMeta() *ListRequestMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentListRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// RoleAttachmentListResponse returns a list of RoleAttachments that meet the criteria of a
// RoleAttachmentListRequest.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Paging information for the query.
	Meta *ListResponseMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// A single page of results matching the list request criteria.
	RoleAttachments []*RoleAttachment `protobuf:"bytes,2,rep,name=role_attachments,json=roleAttachments,proto3" json:"role_attachments,omitempty"`
	// Rate limit information.
	RateLimit *RateLimitMetadata `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *RoleAttachmentListResponse) Reset() {
	*x = RoleAttachmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachmentListResponse) ProtoMessage() {}

func (x *RoleAttachmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachmentListResponse.ProtoReflect.Descriptor instead.
func (*RoleAttachmentListResponse) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{7}
}

func (x *RoleAttachmentListResponse) GetMeta() *ListResponseMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RoleAttachmentListResponse) GetRoleAttachments() []*RoleAttachment {
	if x != nil {
		return x.RoleAttachments
	}
	return nil
}

func (x *RoleAttachmentListResponse) GetRateLimit() *RateLimitMetadata {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

// A RoleAttachment assigns a role to a composite role.
//
// Deprecated: use multi-role instead.
//
// Deprecated: Do not use.
type RoleAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the RoleAttachment.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the composite role of this RoleAttachment.
	CompositeRoleId string `protobuf:"bytes,2,opt,name=composite_role_id,json=compositeRoleId,proto3" json:"composite_role_id,omitempty"`
	// The id of the attached role of this RoleAttachment.
	AttachedRoleId string `protobuf:"bytes,3,opt,name=attached_role_id,json=attachedRoleId,proto3" json:"attached_role_id,omitempty"`
}

func (x *RoleAttachment) Reset() {
	*x = RoleAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_role_attachments_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAttachment) ProtoMessage() {}

func (x *RoleAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_role_attachments_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAttachment.ProtoReflect.Descriptor instead.
func (*RoleAttachment) Descriptor() ([]byte, []int) {
	return file_role_attachments_proto_rawDescGZIP(), []int{8}
}

func (x *RoleAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleAttachment) GetCompositeRoleId() string {
	if x != nil {
		return x.CompositeRoleId
	}
	return ""
}

func (x *RoleAttachment) GetAttachedRoleId() string {
	if x != nil {
		return x.AttachedRoleId
	}
	return ""
}

var File_role_attachments_proto protoreflect.FileDescriptor

var file_role_attachments_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x0d, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x1b, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0xfd, 0x01, 0x0a, 0x1c, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x47, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0xf2,
	0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x14, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01,
	0xf2, 0xf8, 0xb3, 0x07, 0x05, 0x90, 0xf4, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x0c, 0x18, 0x01, 0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3,
	0xb3, 0x07, 0x01, 0x22, 0x66, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3,
	0xb3, 0x07, 0x01, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xf7, 0x01, 0x0a, 0x19,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x47, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0e, 0x72, 0x6f, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x14, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3,
	0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0x90, 0xf4, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x72, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x0c, 0x18, 0x01, 0xfa, 0xf8, 0xb3, 0x07, 0x05,
	0xa8, 0xf3, 0xb3, 0x07, 0x01, 0x22, 0x6c, 0x0a, 0x1b, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x02, 0x69, 0x64, 0x3a,
	0x02, 0x18, 0x01, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a,
	0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x14, 0xf2, 0xf8, 0xb3,
	0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0x90, 0xf4, 0xb3, 0x07,
	0x01, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x0c, 0x18, 0x01,
	0xfa, 0xf8, 0xb3, 0x07, 0x05, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0x22, 0x70, 0x0a, 0x19, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x3a, 0x02, 0x18, 0x01, 0x22, 0xe5, 0x01, 0x0a,
	0x1a, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x10, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb8, 0xf3,
	0xb3, 0x07, 0x01, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x14, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xf2, 0xf8, 0xb3, 0x07, 0x05,
	0x90, 0xf4, 0xb3, 0x07, 0x01, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x3a, 0x02, 0x18, 0x01, 0x22, 0x94, 0x02, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xf2, 0xf8, 0xb3, 0x07, 0x05, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xf2, 0xf8, 0xb3, 0x07, 0x0a, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xc0, 0xf3, 0xb3, 0x07, 0x01, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xf2, 0xf8, 0xb3, 0x07,
	0x0a, 0xb0, 0xf3, 0xb3, 0x07, 0x01, 0xc0, 0xf3, 0xb3, 0x07, 0x01, 0x52, 0x0e, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x3a, 0x6e, 0x18, 0x01, 0xfa,
	0xf8, 0xb3, 0x07, 0x67, 0xa8, 0xf3, 0xb3, 0x07, 0x01, 0xc2, 0xf3, 0xb3, 0x07, 0x5d, 0xa2, 0xf3,
	0xb3, 0x07, 0x28, 0x74, 0x66, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x78, 0x74, 0xaa, 0xf3, 0xb3, 0x07, 0x2b,
	0x74, 0x66, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x74, 0x78, 0x74, 0x32, 0x82, 0x05, 0x0a, 0x0f,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x90, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x88,
	0x02, 0x01, 0x82, 0xf9, 0xb3, 0x07, 0x09, 0xa2, 0xf3, 0xb3, 0x07, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x82, 0xf9, 0xb3, 0x07, 0x19, 0xaa, 0xf3, 0xb3, 0x07, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x2d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x82, 0xf9,
	0xb3, 0x07, 0x0f, 0xb2, 0xf3, 0xb3, 0x07, 0x0a, 0x32, 0x30, 0x32, 0x32, 0x2d, 0x30, 0x33, 0x2d,
	0x31, 0x35, 0x12, 0x8b, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x88, 0x02, 0x01, 0x82, 0xf9, 0xb3, 0x07,
	0x08, 0xa2, 0xf3, 0xb3, 0x07, 0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x1e, 0xaa, 0xf3,
	0xb3, 0x07, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2d, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xf9, 0xb3, 0x07,
	0x0f, 0xb2, 0xf3, 0xb3, 0x07, 0x0a, 0x32, 0x30, 0x32, 0x32, 0x2d, 0x30, 0x33, 0x2d, 0x31, 0x35,
	0x12, 0x97, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a,
	0x88, 0x02, 0x01, 0x82, 0xf9, 0xb3, 0x07, 0x0b, 0xa2, 0xf3, 0xb3, 0x07, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x82, 0xf9, 0xb3, 0x07, 0x1e, 0xaa, 0xf3, 0xb3, 0x07, 0x19, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x82, 0xf9, 0xb3, 0x07, 0x0f, 0xb2, 0xf3, 0xb3, 0x07, 0x0a,
	0x32, 0x30, 0x32, 0x32, 0x2d, 0x30, 0x33, 0x2d, 0x31, 0x35, 0x12, 0x89, 0x01, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x42, 0x88, 0x02, 0x01, 0x82, 0xf9, 0xb3, 0x07, 0x08, 0xa2, 0xf3, 0xb3, 0x07,
	0x03, 0x67, 0x65, 0x74, 0x82, 0xf9, 0xb3, 0x07, 0x19, 0xaa, 0xf3, 0xb3, 0x07, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x82, 0xf9, 0xb3, 0x07, 0x0f, 0xb2, 0xf3, 0xb3, 0x07, 0x0a, 0x32, 0x30, 0x32, 0x32,
	0x2d, 0x30, 0x33, 0x2d, 0x31, 0x35, 0x1a, 0x28, 0x88, 0x02, 0x01, 0xca, 0xf9, 0xb3, 0x07, 0x13,
	0xc2, 0xf9, 0xb3, 0x07, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0xca, 0xf9, 0xb3, 0x07, 0x08, 0xd2, 0xf9, 0xb3, 0x07, 0x03, 0x72, 0x61, 0x2d,
	0x42, 0x6b, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67,
	0x42, 0x17, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x50, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2f, 0x73,
	0x74, 0x72, 0x6f, 0x6e, 0x67, 0x64, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_role_attachments_proto_rawDescOnce sync.Once
	file_role_attachments_proto_rawDescData = file_role_attachments_proto_rawDesc
)

func file_role_attachments_proto_rawDescGZIP() []byte {
	file_role_attachments_proto_rawDescOnce.Do(func() {
		file_role_attachments_proto_rawDescData = protoimpl.X.CompressGZIP(file_role_attachments_proto_rawDescData)
	})
	return file_role_attachments_proto_rawDescData
}

var file_role_attachments_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_role_attachments_proto_goTypes = []interface{}{
	(*RoleAttachmentCreateRequest)(nil),  // 0: v1.RoleAttachmentCreateRequest
	(*RoleAttachmentCreateResponse)(nil), // 1: v1.RoleAttachmentCreateResponse
	(*RoleAttachmentGetRequest)(nil),     // 2: v1.RoleAttachmentGetRequest
	(*RoleAttachmentGetResponse)(nil),    // 3: v1.RoleAttachmentGetResponse
	(*RoleAttachmentDeleteRequest)(nil),  // 4: v1.RoleAttachmentDeleteRequest
	(*RoleAttachmentDeleteResponse)(nil), // 5: v1.RoleAttachmentDeleteResponse
	(*RoleAttachmentListRequest)(nil),    // 6: v1.RoleAttachmentListRequest
	(*RoleAttachmentListResponse)(nil),   // 7: v1.RoleAttachmentListResponse
	(*RoleAttachment)(nil),               // 8: v1.RoleAttachment
	(*CreateRequestMetadata)(nil),        // 9: v1.CreateRequestMetadata
	(*CreateResponseMetadata)(nil),       // 10: v1.CreateResponseMetadata
	(*RateLimitMetadata)(nil),            // 11: v1.RateLimitMetadata
	(*GetRequestMetadata)(nil),           // 12: v1.GetRequestMetadata
	(*GetResponseMetadata)(nil),          // 13: v1.GetResponseMetadata
	(*DeleteRequestMetadata)(nil),        // 14: v1.DeleteRequestMetadata
	(*DeleteResponseMetadata)(nil),       // 15: v1.DeleteResponseMetadata
	(*ListRequestMetadata)(nil),          // 16: v1.ListRequestMetadata
	(*ListResponseMetadata)(nil),         // 17: v1.ListResponseMetadata
}
var file_role_attachments_proto_depIdxs = []int32{
	9,  // 0: v1.RoleAttachmentCreateRequest.meta:type_name -> v1.CreateRequestMetadata
	8,  // 1: v1.RoleAttachmentCreateRequest.role_attachment:type_name -> v1.RoleAttachment
	10, // 2: v1.RoleAttachmentCreateResponse.meta:type_name -> v1.CreateResponseMetadata
	8,  // 3: v1.RoleAttachmentCreateResponse.role_attachment:type_name -> v1.RoleAttachment
	11, // 4: v1.RoleAttachmentCreateResponse.rate_limit:type_name -> v1.RateLimitMetadata
	12, // 5: v1.RoleAttachmentGetRequest.meta:type_name -> v1.GetRequestMetadata
	13, // 6: v1.RoleAttachmentGetResponse.meta:type_name -> v1.GetResponseMetadata
	8,  // 7: v1.RoleAttachmentGetResponse.role_attachment:type_name -> v1.RoleAttachment
	11, // 8: v1.RoleAttachmentGetResponse.rate_limit:type_name -> v1.RateLimitMetadata
	14, // 9: v1.RoleAttachmentDeleteRequest.meta:type_name -> v1.DeleteRequestMetadata
	15, // 10: v1.RoleAttachmentDeleteResponse.meta:type_name -> v1.DeleteResponseMetadata
	11, // 11: v1.RoleAttachmentDeleteResponse.rate_limit:type_name -> v1.RateLimitMetadata
	16, // 12: v1.RoleAttachmentListRequest.meta:type_name -> v1.ListRequestMetadata
	17, // 13: v1.RoleAttachmentListResponse.meta:type_name -> v1.ListResponseMetadata
	8,  // 14: v1.RoleAttachmentListResponse.role_attachments:type_name -> v1.RoleAttachment
	11, // 15: v1.RoleAttachmentListResponse.rate_limit:type_name -> v1.RateLimitMetadata
	0,  // 16: v1.RoleAttachments.Create:input_type -> v1.RoleAttachmentCreateRequest
	2,  // 17: v1.RoleAttachments.Get:input_type -> v1.RoleAttachmentGetRequest
	4,  // 18: v1.RoleAttachments.Delete:input_type -> v1.RoleAttachmentDeleteRequest
	6,  // 19: v1.RoleAttachments.List:input_type -> v1.RoleAttachmentListRequest
	1,  // 20: v1.RoleAttachments.Create:output_type -> v1.RoleAttachmentCreateResponse
	3,  // 21: v1.RoleAttachments.Get:output_type -> v1.RoleAttachmentGetResponse
	5,  // 22: v1.RoleAttachments.Delete:output_type -> v1.RoleAttachmentDeleteResponse
	7,  // 23: v1.RoleAttachments.List:output_type -> v1.RoleAttachmentListResponse
	20, // [20:24] is the sub-list for method output_type
	16, // [16:20] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_role_attachments_proto_init() }
func file_role_attachments_proto_init() {
	if File_role_attachments_proto != nil {
		return
	}
	file_options_proto_init()
	file_spec_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_role_attachments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_role_attachments_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_role_attachments_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_role_attachments_proto_goTypes,
		DependencyIndexes: file_role_attachments_proto_depIdxs,
		MessageInfos:      file_role_attachments_proto_msgTypes,
	}.Build()
	File_role_attachments_proto = out.File
	file_role_attachments_proto_rawDesc = nil
	file_role_attachments_proto_goTypes = nil
	file_role_attachments_proto_depIdxs = nil
}
